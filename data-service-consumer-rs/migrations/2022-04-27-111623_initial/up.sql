CREATE EXTENSION IF NOT EXISTS btree_gin WITH SCHEMA public;
COMMENT ON EXTENSION btree_gin IS 'support for indexing common datatypes in GIN';

CREATE TABLE IF NOT EXISTS blocks_microblocks (
    uid BIGINT UNIQUE GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    id VARCHAR NOT NULL PRIMARY KEY,
    height INTEGER NOT NULL,
    time_stamp TIMESTAMPTZ
);

CREATE TABLE IF NOT EXISTS asset_updates(
    block_uid BIGINT NOT NULL REFERENCES blocks_microblocks(uid) ON DELETE CASCADE,
    uid BIGINT UNIQUE GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    superseded_by BIGINT NOT NULL,
    asset_id VARCHAR NOT NULL,
    decimals SMALLINT NOT NULL,
    name VARCHAR NOT NULL,
    description VARCHAR NOT NULL,
    reissuable bool NOT NULL,
    volume BIGINT NOT NULL,
    script VARCHAR,
    sponsorship int8,
    nft bool NOT NULL,

    PRIMARY KEY (superseded_by, asset_id)
);

CREATE TABLE IF NOT EXISTS asset_origins(
    asset_id VARCHAR NOT NULL PRIMARY KEY,
    first_asset_update_uid BIGINT NOT NULL REFERENCES asset_updates(uid) ON DELETE CASCADE,
    origin_transaction_id VARCHAR NOT NULL,
    issuer VARCHAR NOT NULL,
    issue_height INTEGER NOT NULL,
    issue_time_stamp TIMESTAMPTZ NOT NULL
);

CREATE TABLE IF NOT EXISTS blocks (
    schema_version smallint NOT NULL,
    time_stamp timestamp without time zone NOT NULL,
    reference character varying NOT NULL,
    nxt_consensus_base_target bigint NOT NULL,
    nxt_consensus_generation_signature character varying NOT NULL,
    generator character varying NOT NULL,
    signature character varying NOT NULL,
    fee bigint NOT NULL,
    blocksize integer,
    height integer NOT NULL PRIMARY KEY,
    features smallint[]
);

CREATE TABLE IF NOT EXISTS txs (
    height integer NOT NULL,
    tx_type smallint NOT NULL,
    id character varying NOT NULL PRIMARY KEY,
    time_stamp timestamp without time zone NOT NULL,
    signature character varying,
    fee bigint NOT NULL,
    proofs text[],
    tx_version smallint,
    sender character varying,
    sender_public_key character varying,
    status varchar DEFAULT 'succeeded' NOT NULL
);

CREATE TABLE IF NOT EXISTS txs_1 (
    recipient character varying NOT NULL,
    amount bigint NOT NULL,

    PRIMARY KEY (id),
    FOREIGN KEY (height) REFERENCES blocks(height) ON DELETE CASCADE
)
INHERITS (txs);

CREATE TABLE IF NOT EXISTS txs_2 (
    sender character varying NOT NULL,
    sender_public_key character varying NOT NULL,
    recipient character varying NOT NULL,
    amount bigint NOT NULL,

    PRIMARY KEY (id, time_stamp),
    FOREIGN KEY (height) REFERENCES blocks(height) ON DELETE CASCADE
)
INHERITS (txs);

CREATE TABLE IF NOT EXISTS txs_3 (
    sender character varying NOT NULL,
    sender_public_key character varying NOT NULL,
    asset_id character varying NOT NULL,
    asset_name character varying NOT NULL,
    description character varying NOT NULL,
    quantity bigint NOT NULL,
    decimals smallint NOT NULL,
    reissuable boolean NOT NULL,
    script character varying,

    PRIMARY KEY (id),
    FOREIGN KEY (height) REFERENCES blocks(height) ON DELETE CASCADE
)
INHERITS (txs);

CREATE TABLE IF NOT EXISTS txs_4 (
    sender character varying NOT NULL,
    sender_public_key character varying NOT NULL,
    asset_id character varying NOT NULL,
    amount bigint NOT NULL,
    recipient character varying NOT NULL,
    fee_asset character varying NOT NULL,
    attachment character varying NOT NULL,

    PRIMARY KEY (id),
    FOREIGN KEY (height) REFERENCES blocks(height) ON DELETE CASCADE
)
INHERITS (txs);
ALTER TABLE ONLY txs_4 ALTER COLUMN sender SET STATISTICS 1000;

CREATE TABLE IF NOT EXISTS txs_5 (
    sender character varying NOT NULL,
    sender_public_key character varying NOT NULL,
    asset_id character varying NOT NULL,
    quantity bigint NOT NULL,
    reissuable boolean NOT NULL,

    PRIMARY KEY (id),
    FOREIGN KEY (height) REFERENCES blocks(height) ON DELETE CASCADE
)
INHERITS (txs);

CREATE TABLE IF NOT EXISTS txs_6 (
    sender character varying NOT NULL,
    sender_public_key character varying NOT NULL,
    asset_id character varying NOT NULL,
    amount bigint NOT NULL,

    PRIMARY KEY (id),
    FOREIGN KEY (height) REFERENCES blocks(height) ON DELETE CASCADE
)
INHERITS (txs);

CREATE TABLE IF NOT EXISTS txs_7 (
    sender character varying NOT NULL,
    sender_public_key character varying NOT NULL,
    order1 jsonb NOT NULL,
    order2 jsonb NOT NULL,
    amount_asset character varying NOT NULL,
    price_asset character varying NOT NULL,
    amount bigint NOT NULL,
    price bigint NOT NULL,
    buy_matcher_fee bigint NOT NULL,
    sell_matcher_fee bigint NOT NULL,

    PRIMARY KEY (id),
    FOREIGN KEY (height) REFERENCES blocks(height) ON DELETE CASCADE
)
INHERITS (txs);

CREATE TABLE IF NOT EXISTS txs_8 (
    sender character varying NOT NULL,
    sender_public_key character varying NOT NULL,
    recipient character varying NOT NULL,
    amount bigint NOT NULL,

    PRIMARY KEY (id),
    FOREIGN KEY (height) REFERENCES blocks(height) ON DELETE CASCADE
)
INHERITS (txs);

CREATE TABLE IF NOT EXISTS txs_9 (
    sender character varying NOT NULL,
    sender_public_key character varying NOT NULL,
    lease_id character varying NOT NULL,

    PRIMARY KEY (id),
    FOREIGN KEY (height) REFERENCES blocks(height) ON DELETE CASCADE
)
INHERITS (txs);

CREATE TABLE IF NOT EXISTS txs_10 (
    sender character varying NOT NULL,
    sender_public_key character varying NOT NULL,
    alias character varying NOT NULL,
    
    PRIMARY KEY (id, time_stamp),
    FOREIGN KEY (height) REFERENCES blocks(height) ON DELETE CASCADE
)
INHERITS (txs);

CREATE TABLE IF NOT EXISTS txs_11 (
    sender character varying NOT NULL,
    sender_public_key character varying NOT NULL,
    asset_id character varying NOT NULL,
    attachment character varying NOT NULL,

    PRIMARY KEY (id),
    FOREIGN KEY (height) REFERENCES blocks(height) ON DELETE CASCADE
)
INHERITS (txs);

CREATE TABLE IF NOT EXISTS txs_11_transfers (
    tx_id character varying NOT NULL,
    recipient character varying NOT NULL,
    amount bigint NOT NULL,
    position_in_tx smallint NOT NULL,

    PRIMARY KEY (tx_id, position_in_tx),
    FOREIGN KEY (tx_id) REFERENCES txs_11(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS txs_12 (
    sender character varying NOT NULL,
    sender_public_key character varying NOT NULL,

    PRIMARY KEY (id),
    FOREIGN KEY (height) REFERENCES blocks(height) ON DELETE CASCADE
)
INHERITS (txs);

CREATE TABLE IF NOT EXISTS txs_12_data (
    tx_id text NOT NULL,
    data_key text NOT NULL,
    data_type text,
    data_value_integer bigint,
    data_value_boolean boolean,
    data_value_binary text,
    data_value_string text,
    position_in_tx smallint NOT NULL,

    PRIMARY KEY (tx_id, position_in_tx),
    FOREIGN KEY (tx_id) REFERENCES txs_12(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS txs_13 (
    sender character varying NOT NULL,
    sender_public_key character varying NOT NULL,
    script character varying,

    PRIMARY KEY (id),
    FOREIGN KEY (height) REFERENCES blocks(height) ON DELETE CASCADE
)
INHERITS (txs);

CREATE TABLE IF NOT EXISTS txs_14 (
    sender character varying NOT NULL,
    sender_public_key character varying NOT NULL,
    asset_id character varying NOT NULL,
    min_sponsored_asset_fee bigint,

    PRIMARY KEY (id),
    FOREIGN KEY (height) REFERENCES blocks(height) ON DELETE CASCADE
)
INHERITS (txs);

CREATE TABLE IF NOT EXISTS txs_15 (
    sender character varying NOT NULL,
    sender_public_key character varying NOT NULL,
    asset_id character varying NOT NULL,
    script character varying,

    PRIMARY KEY (id),
    FOREIGN KEY (height) REFERENCES blocks(height) ON DELETE CASCADE
)
INHERITS (txs);

CREATE TABLE IF NOT EXISTS txs_16 (
    sender character varying NOT NULL,
    sender_public_key character varying NOT NULL,
    dapp character varying NOT NULL,
    function_name character varying,
    fee_asset_id VARCHAR NOT NULL,

    PRIMARY KEY (id),
    FOREIGN KEY (height) REFERENCES blocks(height) ON DELETE CASCADE
)
INHERITS (txs);

CREATE TABLE IF NOT EXISTS txs_16_args (
    tx_id text NOT NULL,
    arg_type text NOT NULL,
    arg_value_integer bigint,
    arg_value_boolean boolean,
    arg_value_binary text,
    arg_value_string text,
    arg_value_list jsonb DEFAULT NULL,
    position_in_args smallint NOT NULL,

    PRIMARY KEY (tx_id, position_in_args),
    FOREIGN KEY (tx_id) REFERENCES txs_16(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS txs_16_payment (
    tx_id text NOT NULL,
    amount bigint NOT NULL,
    asset_id text,
    position_in_payment smallint NOT NULL,

    PRIMARY KEY (tx_id, position_in_payment),
    FOREIGN KEY (tx_id) REFERENCES txs_16(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS txs_17
(
    sender VARCHAR NOT NULL,
    sender_public_key VARCHAR NOT NULL,
    asset_id VARCHAR NOT NULL,
    asset_name VARCHAR NOT NULL,
    description VARCHAR NOT NULL,

    CONSTRAINT txs_17_pk PRIMARY KEY (id),
    CONSTRAINT txs_17_blocks_fk FOREIGN KEY (height) REFERENCES blocks ON DELETE CASCADE
) INHERITS (txs);

CREATE TABLE IF NOT EXISTS assets_metadata (
    asset_id character varying NOT NULL PRIMARY KEY,
    asset_name character varying,
    ticker character varying,
    height integer
);

CREATE TABLE IF NOT EXISTS assets_names_map (
    asset_id character varying NOT NULL PRIMARY KEY,
    asset_name character varying NOT NULL,
    searchable_asset_name tsvector NOT NULL
);

CREATE TABLE IF NOT EXISTS blocks (
    schema_version smallint NOT NULL,
    time_stamp timestamp without time zone NOT NULL,
    reference character varying NOT NULL,
    nxt_consensus_base_target bigint NOT NULL,
    nxt_consensus_generation_signature character varying NOT NULL,
    generator character varying NOT NULL,
    signature character varying NOT NULL,
    fee bigint NOT NULL,
    blocksize integer,
    height integer NOT NULL PRIMARY KEY,
    features smallint[]
);

CREATE TABLE IF NOT EXISTS candles (
    time_start timestamp without time zone NOT NULL,
    amount_asset_id character varying(255) NOT NULL,
    price_asset_id character varying(255) NOT NULL,
    low numeric NOT NULL,
    high numeric NOT NULL,
    volume numeric NOT NULL,
    quote_volume numeric NOT NULL,
    max_height integer NOT NULL,
    txs_count integer NOT NULL,
    weighted_average_price numeric NOT NULL,
    open numeric NOT NULL,
    close numeric NOT NULL,
    interval varchar NOT NULL,
    matcher varchar NOT NULL,

    PRIMARY KEY (interval, time_start, amount_asset_id, price_asset_id, matcher)
);

CREATE TABLE IF NOT EXISTS pairs (
    amount_asset_id character varying(255) NOT NULL,
    price_asset_id character varying(255) NOT NULL,
    first_price numeric NOT NULL,
    last_price numeric NOT NULL,
    volume numeric NOT NULL,
    volume_waves numeric,
    quote_volume numeric NOT NULL,
    high numeric NOT NULL,
    low numeric NOT NULL,
    weighted_average_price numeric NOT NULL,
    txs_count integer NOT NULL,
    matcher character varying(255) NOT NULL,

    -- TODO: ensure right primary key
    PRIMARY KEY (first_price, last_price, amount_asset_id, price_asset_id, matcher)
);

CREATE TABLE IF NOT EXISTS tickers (
    asset_id text NOT NULL PRIMARY KEY,
    ticker text NOT NULL
);

CREATE TABLE IF NOT EXISTS waves_data (
	height int4 NOT NULL PRIMARY KEY,
	quantity numeric NOT NULL,

    FOREIGN KEY (height) REFERENCES blocks(height) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS bm_id_idx ON blocks_microblocks(id);
CREATE INDEX IF NOT EXISTS bm_time_stamp_uid_desc_idx ON blocks_microblocks(time_stamp DESC nulls FIRST, uid DESC);
CREATE INDEX IF NOT EXISTS asset_updates_block_id_idx ON asset_updates(block_uid);
CREATE INDEX IF NOT EXISTS asset_updates_name_idx ON asset_updates USING GIN (to_tsvector('simple', name)) WHERE superseded_by = 9223372036854775806;
CREATE INDEX IF NOT EXISTS assets_names_map_asset_name_idx ON assets_names_map USING btree (asset_name varchar_pattern_ops);
CREATE INDEX IF NOT EXISTS candles_max_height_index ON candles USING btree (max_height);
CREATE INDEX IF NOT EXISTS pairs_amount_asset_id_price_asset_id_index ON pairs USING btree (amount_asset_id, price_asset_id);
CREATE INDEX IF NOT EXISTS searchable_asset_name_idx ON assets_names_map USING gin (searchable_asset_name);
CREATE UNIQUE INDEX IF NOT EXISTS tickers_ticker_idx ON tickers USING btree (ticker);
CREATE INDEX IF NOT EXISTS txs_sender_time_stamp_id_idx ON txs (sender,time_stamp,id);
CREATE INDEX IF NOT EXISTS txs_1_height_idx ON txs_1 USING btree (height);
CREATE INDEX IF NOT EXISTS txs_1_sender_time_stamp_id_idx ON txs_1 (sender,time_stamp,id);
CREATE INDEX IF NOT EXISTS txs_2_height_idx ON txs_2 USING btree (height);
CREATE INDEX IF NOT EXISTS txs_2_sender_idx ON txs_2 USING hash (sender);
CREATE INDEX IF NOT EXISTS txs_2_time_stamp_desc_id_asc_idx ON txs_2 USING btree (time_stamp DESC, id);
CREATE INDEX IF NOT EXISTS txs_2_sender_time_stamp_id_idx ON txs_2 (sender,time_stamp,id);
CREATE INDEX IF NOT EXISTS txs_3_asset_id_idx ON txs_3 USING hash (asset_id);
CREATE INDEX IF NOT EXISTS txs_3_height_idx ON txs_3 USING btree (height);
CREATE INDEX IF NOT EXISTS txs_3_sender_idx ON txs_3 USING hash (sender);
CREATE INDEX IF NOT EXISTS txs_3_time_stamp_asc_id_asc_idx ON txs_3 USING btree (time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_3_time_stamp_desc_id_asc_idx ON txs_3 USING btree (time_stamp DESC, id);
CREATE INDEX IF NOT EXISTS txs_3_time_stamp_desc_id_desc_idx ON txs_3 USING btree (time_stamp DESC, id DESC);
CREATE INDEX IF NOT EXISTS txs_3_md5_script_idx ON txs_3 USING btree (md5((script)::text));
CREATE INDEX IF NOT EXISTS txs_3_sender_time_stamp_id_idx ON txs_3 (sender,time_stamp,id);
CREATE INDEX IF NOT EXISTS txs_4_asset_id_index ON txs_4 USING btree (asset_id);
CREATE INDEX IF NOT EXISTS txs_4_height_idx ON txs_4 USING btree (height);
CREATE INDEX IF NOT EXISTS txs_4_recipient_idx ON txs_4 USING btree (recipient);
CREATE INDEX IF NOT EXISTS txs_4_sender_time_stamp_id_idx ON txs_4 USING btree (sender, time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_4_time_stamp_desc_id_asc_idx ON txs_4 USING btree (time_stamp DESC, id);
CREATE INDEX IF NOT EXISTS txs_4_time_stamp_desc_id_desc_idx ON txs_4 USING btree (time_stamp DESC, id DESC);
CREATE INDEX IF NOT EXISTS txs_5_asset_id_idx ON txs_5 USING hash (asset_id);
CREATE INDEX IF NOT EXISTS txs_5_height_idx ON txs_5 USING btree (height);
CREATE INDEX IF NOT EXISTS txs_5_sender_idx ON txs_5 USING hash (sender);
CREATE INDEX IF NOT EXISTS txs_5_time_stamp_asc_id_asc_idx ON txs_5 USING btree (time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_5_time_stamp_desc_id_asc_idx ON txs_5 USING btree (time_stamp DESC, id);
CREATE INDEX IF NOT EXISTS txs_5_time_stamp_desc_id_desc_idx ON txs_5 USING btree (time_stamp DESC, id DESC);
CREATE INDEX IF NOT EXISTS txs_5_sender_time_stamp_id_idx ON txs_5 (sender,time_stamp,id);
CREATE INDEX IF NOT EXISTS txs_6_asset_id_idx ON txs_6 USING hash (asset_id);
CREATE INDEX IF NOT EXISTS txs_6_height_idx ON txs_6 USING btree (height);
CREATE INDEX IF NOT EXISTS txs_6_sender_idx ON txs_6 USING hash (sender);
CREATE INDEX IF NOT EXISTS txs_6_time_stamp_asc_id_asc_idx ON txs_6 USING btree (time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_6_time_stamp_desc_id_asc_idx ON txs_6 USING btree (time_stamp DESC, id);
CREATE INDEX IF NOT EXISTS txs_6_time_stamp_desc_id_desc_idx ON txs_6 USING btree (time_stamp DESC, id DESC);
CREATE INDEX IF NOT EXISTS txs_6_sender_time_stamp_id_idx ON txs_6 (sender,time_stamp,id);
CREATE INDEX IF NOT EXISTS txs_7_amount_asset_price_asset_time_stamp_id_idx ON txs_7 USING btree (amount_asset, price_asset, time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_7_height_idx ON txs_7 USING btree (height);
CREATE INDEX IF NOT EXISTS txs_7_price_asset_idx ON txs_7 USING hash (price_asset);
CREATE INDEX IF NOT EXISTS txs_7_sender_time_stamp_id_idx ON txs_7 USING btree (sender, time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_7_time_stamp_asc_id_asc_idx ON txs_7 USING btree (time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_7_time_stamp_desc_id_desc_idx ON txs_7 USING btree (time_stamp DESC, id DESC);
CREATE INDEX IF NOT EXISTS txs_7_order_ids_timestamp_id_idx ON txs_7 USING gin ((ARRAY[(order1 ->> 'id'::text), (order2 ->> 'id'::text)]), time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_7_order_senders_timestamp_id_idx ON txs_7 USING gin ((ARRAY[(order1 ->> 'sender'::text), (order2 ->> 'sender'::text)]), time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_7_amount_asset_price_asset_time_stamp_id_partial_idx ON txs_7 USING btree (amount_asset, price_asset, time_stamp, id) WHERE ((sender)::text = '3PJaDyprvekvPXPuAtxrapacuDJopgJRaU3'::text);
CREATE INDEX IF NOT EXISTS txs_7_time_stamp_id_partial_idx ON txs_7 USING btree (time_stamp, id) WHERE ((sender)::text = '3PJaDyprvekvPXPuAtxrapacuDJopgJRaU3'::text);
CREATE INDEX IF NOT EXISTS txs_8_height_idx ON txs_8 USING btree (height);
CREATE INDEX IF NOT EXISTS txs_8_recipient_idx ON txs_8 USING btree (recipient);
CREATE INDEX IF NOT EXISTS txs_8_sender_time_stamp_id_idx ON txs_8 USING btree (sender, time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_8_time_stamp_asc_id_asc_idx ON txs_8 USING btree (time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_8_time_stamp_desc_id_asc_idx ON txs_8 USING btree (time_stamp DESC, id);
CREATE INDEX IF NOT EXISTS txs_8_time_stamp_desc_id_desc_idx ON txs_8 USING btree (time_stamp DESC, id DESC);
CREATE INDEX IF NOT EXISTS txs_9_height_idx ON txs_9 USING btree (height);
CREATE INDEX IF NOT EXISTS txs_9_lease_id_idx ON txs_9 USING hash (lease_id);
CREATE INDEX IF NOT EXISTS txs_9_sender_idx ON txs_9 USING hash (sender);
CREATE INDEX IF NOT EXISTS txs_9_time_stamp_asc_id_asc_idx ON txs_9 USING btree (time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_9_time_stamp_desc_id_asc_idx ON txs_9 USING btree (time_stamp DESC, id);
CREATE INDEX IF NOT EXISTS txs_9_time_stamp_desc_id_desc_idx ON txs_9 USING btree (time_stamp DESC, id DESC);
CREATE INDEX IF NOT EXISTS txs_9_sender_time_stamp_id_idx ON txs_9 (sender,time_stamp,id);
CREATE INDEX IF NOT EXISTS txs_10_alias_idx ON txs_10 USING hash (alias);
CREATE INDEX IF NOT EXISTS txs_10_height_idx ON txs_10 USING btree (height);
CREATE INDEX IF NOT EXISTS txs_10_sender_idx ON txs_10 USING hash (sender);
CREATE INDEX IF NOT EXISTS txs_10_time_stamp_asc_id_asc_idx ON txs_10 USING btree (time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_10_sender_time_stamp_id_idx ON txs_10 (sender,time_stamp,id);
CREATE INDEX IF NOT EXISTS txs_11_asset_id_idx ON txs_11 USING hash (asset_id);
CREATE INDEX IF NOT EXISTS txs_11_height_idx ON txs_11 USING btree (height);
CREATE INDEX IF NOT EXISTS txs_11_sender_time_stamp_id_idx ON txs_11 USING btree (sender, time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_11_time_stamp_desc_id_desc_idx ON txs_11 USING btree (time_stamp DESC, id);
CREATE INDEX IF NOT EXISTS txs_11_transfers_recipient_index ON txs_11_transfers USING btree (recipient);
CREATE INDEX IF NOT EXISTS txs_12_data_data_key_idx ON txs_12_data USING hash (data_key);
CREATE INDEX IF NOT EXISTS txs_12_data_data_type_idx ON txs_12_data USING hash (data_type);
CREATE INDEX IF NOT EXISTS txs_12_data_value_binary_partial_idx ON txs_12_data USING hash (data_value_binary) WHERE (data_type = 'binary'::text);
CREATE INDEX IF NOT EXISTS txs_12_data_value_boolean_partial_idx ON txs_12_data USING btree (data_value_boolean) WHERE (data_type = 'boolean'::text);
CREATE INDEX IF NOT EXISTS txs_12_data_value_integer_partial_idx ON txs_12_data USING btree (data_value_integer) WHERE (data_type = 'integer'::text);
CREATE INDEX IF NOT EXISTS txs_12_data_value_string_partial_idx ON txs_12_data USING hash (data_value_string) WHERE (data_type = 'string'::text);
CREATE INDEX IF NOT EXISTS txs_12_height_idx ON txs_12 USING btree (height);
CREATE INDEX IF NOT EXISTS txs_12_sender_idx ON txs_12 USING hash (sender);
CREATE INDEX IF NOT EXISTS txs_12_time_stamp_id_idx ON txs_12 USING btree (time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_12_sender_time_stamp_id_idx ON txs_12 (sender,time_stamp,id);
CREATE INDEX IF NOT EXISTS txs_13_height_idx ON txs_13 USING btree (height);
CREATE INDEX IF NOT EXISTS txs_13_sender_idx ON txs_13 USING hash (sender);
CREATE INDEX IF NOT EXISTS txs_13_time_stamp_id_idx ON txs_13 USING btree (time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_13_md5_script_idx ON txs_13 USING btree (md5((script)::text));
CREATE INDEX IF NOT EXISTS txs_13_sender_time_stamp_id_idx ON txs_13 (sender,time_stamp,id);
CREATE INDEX IF NOT EXISTS txs_14_height_idx ON txs_14 USING btree (height);
CREATE INDEX IF NOT EXISTS txs_14_sender_idx ON txs_14 USING hash (sender);
CREATE INDEX IF NOT EXISTS txs_14_time_stamp_id_idx ON txs_14 USING btree (time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_14_sender_time_stamp_id_idx ON txs_14 (sender,time_stamp,id);
CREATE INDEX IF NOT EXISTS txs_15_height_idx ON txs_15 USING btree (height);
CREATE INDEX IF NOT EXISTS txs_15_sender_idx ON txs_15 USING btree (sender);
CREATE INDEX IF NOT EXISTS txs_15_time_stamp_id_idx ON txs_15 USING btree (time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_15_md5_script_idx ON txs_15 USING btree (md5((script)::text));
CREATE INDEX IF NOT EXISTS txs_15_sender_time_stamp_id_idx ON txs_15 (sender,time_stamp,id);
CREATE INDEX IF NOT EXISTS txs_16_args_arg_type_idx ON txs_16_args USING hash (arg_type);
CREATE INDEX IF NOT EXISTS txs_16_args_arg_value_binary_partial_idx ON txs_16_args USING hash (arg_value_binary) WHERE (arg_type = 'binary'::text);
CREATE INDEX IF NOT EXISTS txs_16_args_arg_value_boolean_partial_idx ON txs_16_args USING btree (arg_value_boolean) WHERE (arg_type = 'boolean'::text);
CREATE INDEX IF NOT EXISTS txs_16_args_arg_value_integer_partial_idx ON txs_16_args USING btree (arg_value_integer) WHERE (arg_type = 'integer'::text);
CREATE INDEX IF NOT EXISTS txs_16_args_arg_value_string_partial_idx ON txs_16_args USING hash (arg_value_string) WHERE (arg_type = 'string'::text);
CREATE INDEX IF NOT EXISTS txs_16_height_idx ON txs_16 USING btree (height);
CREATE INDEX IF NOT EXISTS txs_16_time_stamp_id_idx ON txs_16 USING btree (time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_16_sender_time_stamp_id_idx ON txs_16 (sender,time_stamp,id);
CREATE INDEX IF NOT EXISTS txs_17_height_idx ON txs_17 (height);
CREATE INDEX IF NOT EXISTS txs_17_sender_time_stamp_id_idx ON txs_17 (sender, time_stamp, id);
CREATE INDEX IF NOT EXISTS txs_17_asset_id_id_idx ON txs_17 (asset_id, id);
CREATE INDEX IF NOT EXISTS waves_data_height_idx ON waves_data USING btree (height);